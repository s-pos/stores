name: Deploy Service Authentications on env Staging

on:
  push:
    branches:
      - stable

env:
  NAMESPACE: bri-invest
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  SERVICE_NAME: auth
  DOCKER_URL: ${{ secrets.DOCKER_USERNAME }}/spos-auth
  HOST: api-dev.brinvestyuk.com
  ENDPOINT: /auth
  KUBE_DATA:

jobs:
  setup-build-push-deploy:
    name: Setup build, push, and deploy to GKE Server
    runs-on: ubuntu-20.04

    steps:
      ## checkout repository
      - name: Checkout Repo
        uses: actions/checkout@v2

      ## setup gcloud cli
      - name: Setup gcloud cli
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.SERVICE_ACCOUNT }}
          project_id: ${{ secrets.CLUSTER_PROJECT }}

      ## setup gke credentials
      - name: Setup GKE Credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.CLUSTER_NAME }} --zone ${{ secrets.CLUSTER_REGION }} && \
          echo "KUBE_DATA=$(cat ~/.kube/config | base64)"

      # build image
      - name: Build
        run: |-
          docker build -t ${{ env.DOCKER_URL }}:testing .

      ## push image
      - name: Push Image
        run: |-
          docker login -u ${{ env.DOCKER_USERNAME }} -p ${{ env.DOCKER_PASSWORD }} && \
          docker push ${{ env.DOCKER_URL }}:testing

      ## deployment k8s
      - name: Deploy to k8s
        run: |
          helm upgrade ${{ env.SERVICE_NAME }} --install ./.helm-chart -n ${{ env.NAMESPACE }} --set image.repository=${{ env.DOCKER_URL }} --set image.tag=testing --set ingress.host=${{ env.HOST }} --set ingress.tlshosts={"${{ env.HOST }}"} --set ingress.paths={"${{ env.ENDPOINT }}"} && kubectl rollout restart deploy/${{ env.SERVICE_NAME }} -n ${{ env.NAMESPACE }}
